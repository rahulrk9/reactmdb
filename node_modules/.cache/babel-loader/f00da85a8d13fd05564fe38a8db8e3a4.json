{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\z8qrr\\\\Documents\\\\ReactJS\\\\Udemy\\\\ReactCourse\\\\React RMDB - Starter files_rev8 - NEW RESPONSIVE STYLE\\\\React RMDB - Start Here\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: null\n    };\n\n    this.fetchItem = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"/credits?api_key=\").concat(API_KEY, \"&language=en-US\");\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(error => console.error(\"Error: \", error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n    this.fetchItem(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      movie: this.props.location.movieName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      movie: this.state.movie,\n      directors: this.state.directors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      time: this.state.movie.runtime,\n      budget: this.state.movie.budget,\n      revenue: this.state.movie.revenue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) : null, this.state.actors ? React.createElement(\"div\", {\n      className: \"rmdb-movie-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: 'Actors',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.actors.map((element, i) => {\n      return React.createElement(Actor, {\n        key: i,\n        actor: element,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }))) : null, this.state.actors && !this.state.loading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"No Movie Found\") : null, this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:\\Users\\z8qrr\\Documents\\ReactJS\\Udemy\\ReactCourse\\React RMDB - Starter files_rev8 - NEW RESPONSIVE STYLE\\React RMDB - Start Here\\src\\components\\Movie\\Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItem","endpoint","fetch","then","result","json","status_code","setState","props","match","params","movieId","crew","filter","member","job","cast","catch","error","console","componentDidMount","render","location","movieName","runtime","budget","revenue","map","element","i"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\r\nimport { API_URL,API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\n\r\nclass Movie extends Component{\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loading:true });\r\n\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItem(endpoint);\r\n    }\r\n\r\n    fetchItem = (endpoint)=>{\r\n        fetch(endpoint)\r\n        .then(result=>result.json())\r\n        .then(result=>{\r\n            \r\n            if(result.status_code){\r\n                this.setState({loading : false});\r\n            }else{\r\n                this.setState({movie: result},()=>{\r\n                    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}&language=en-US`;\r\n                    fetch(endpoint)\r\n                    .then(result=>result.json())\r\n                    .then(result=>{\r\n                        \r\n                        const directors = result.crew.filter((member)=>member.job===\"Director\");\r\n                        this.setState({\r\n                            actors: result.cast,\r\n                            directors,\r\n                            loading:false\r\n                        })\r\n                    })\r\n                });\r\n            }\r\n\r\n        })\r\n        .catch(error=>console.error(\"Error: \",error));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className = \"rmdb-movie\">\r\n            {\r\n                this.state.movie?\r\n                <div>\r\n                    <Navigation movie={this.props.location.movieName}/>\r\n                    <MovieInfo movie={this.state.movie} directors={this.state.directors}/>\r\n                    <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n\r\n                </div>\r\n                :null\r\n            }\r\n\r\n            {\r\n                this.state.actors?\r\n                <div className=\"rmdb-movie-grid\">\r\n                    <FourColGrid header={'Actors'}>\r\n                        {this.state.actors.map((element,i) => {\r\n                            return <Actor key={i} actor={element}/>\r\n                        })}\r\n                    </FourColGrid>\r\n\r\n                </div>\r\n            :null\r\n            }\r\n\r\n            {\r\n                this.state.actors && !this.state.loading?\r\n                <h1>No Movie Found</h1>:\r\n                null\r\n            }\r\n            {this.state.loading?<Spinner/>:null }\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}